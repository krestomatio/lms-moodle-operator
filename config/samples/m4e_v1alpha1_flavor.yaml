apiVersion: m4e.krestomat.io/v1alpha1
kind: Flavor
metadata:
  name: base-standard-gke
spec:
  m4eSpec:
    # moodleImage: quay.io/krestomatio/moodle@sha256:b4d211fba94312940fc78f144fd3e654bebc1c5cd2e3904d43dbe08f3c1769cb
    moodleProtocol: https
    ## Moodle new instance
    moodleNewInstanceAgreeLicense: true
    moodleNewInstanceFullname: Demo site
    moodleNewInstanceShortname: demo
    moodleNewInstanceSummary: A demo site
    moodleNewInstanceAdminmail: admin@otherexample.com
    moodleNewAdminpassHash: $2b$10$zbRuwPil1wNWQUkvlkchwe3/rOljJvoheydndKH1X0bdIIigy0xim
    # Moodle data
    moodlePvcDataSize: 5Gi
    moodlePvcDataStorageAccessMode: ReadWriteMany
    nginxIngressAnnotations: |
      kubernetes.io/ingress.class: "haproxy"
    ## Postgres as db for site
    # moodlePostgresMetaName: postgres-sample
    ## Nfs as shared storage for site
    # moodleNfsMetaName: server-sample
    ## Keydb as cache for site
    # moodleKeydbMetaName: keydb-sample
    ## Redis
    moodleConfigSessionRedisPrefix: 'sess_'
    moodleConfigSessionRedisSerializer_use_igbinary: true
    moodleConfigSessionRedisCompressor: gzip
    moodleRedisMucStorePrefix: muc_
    moodleRedisMucStoreSerializer: 2
    moodleRedisMucStoreCompressor: 1

    ## Notify status endpoint
    notifyStatus:
      url: https://api.krestomat.io/v1/operators/sites
      method: PUT
  postgresSpec:
    # postgresMode: one of 'standalone', 'readreplicas'
    # by default 'standalone' is 1 one primary only, while 'readreplicas' is 1 primary and 1 replica
    postgresMode: 'standalone'

    # Assign 1Gi to each persistent volume: primary and replicas
    postgresPvcDataSize: 1Gi

    # Add extra pgbouncer config
    # pgbouncerExtraConfig: |
    #   listen_backlog = 256

    ## Storage class name to be used by Postgres
    postgresPvcDataStorageClassName: gke-csi-standard
  nfsSpec:
    # Ownership/permissions
    ## Set export folder userid to 48
    serverExportUserid: 48
    ## Set export folder groupid to 0
    serverExportGroupid: 0
    ## Set export folder permissions to 775
    serverExportPermissions: "0755"

    # Autoexpansion: if storage available is less than 20% or 'serverPvcAutoexpansionIncrementGib', adjust PVC storage size according to 'serverPvcAutoexpansionIncrementGib' and 'serverPvcAutoexpansionCapGib':
    # * Kubernetes cluster and PVC must support expansion of volumes
    # * In older cluster versions, pods require restart when autoexpanding if Kubernetes feature gate
    #   'ExpandInUsePersistentVolumes' is false. See:
    #   https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/
    ## Enable autoexpansion
    serverPvcAutoexpansion: true
    ## Every time autoexpansion is required, increment 1 GiB
    serverPvcAutoexpansionIncrementGib: 1
    ## But no more than 5 GiB
    serverPvcAutoexpansionCapGib: 5

    ## Storage class name to be used by this (NFS) Server
    serverPvcDataStorageClassName: gke-csi-standard
  keydbSpec:
    # keydbMode: one of 'standalone', 'multimaster', 'custom'
    # By default 'standalone' is 1 replica and 'multimaster' 3
    keydbMode: 'standalone'

    # Enable and assign a limit of 1Gi memory
    keydbResourceLimits: true
    keydbResourceLimitsCpu: "1"
    keydbResourceLimitsMemory: 1Gi

    # Assign 1Gi for each replica persistent volume
    keydbPvcDataSize: 1Gi

    # Add extra keydb config
    keydbExtraConfig: |
      maxmemory 900mb
      maxmemory-policy allkeys-lru
